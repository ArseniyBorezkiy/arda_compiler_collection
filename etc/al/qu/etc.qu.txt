/*
 * Quenya grammar reference.
 * Borezkiy Arseniy Petrovich.
 */
 
.global /* etc.qu */

.language quenya 1 100
.compiler 1 0

/* ===========================
 * TENGWAR ALPHABET DEFINITION
 * =========================== */
 
/*
 * basic vowel groups
 */

.alphabet aou_vowel {
  a   = "tehta (a)"
  o   = "tehta (o)"
  u   = "tehta (u)"
}

.alphabet e_vowel {
  e   = "tehta (e)"
}

.alphabet i_vowel {
  i   = "tehta (i)"
}

.alphabet ie_vowel {
  ie  = "vowels (i, e)"
}

.alphabet ea_vowel {
  ea  = "vowels (e, a)"
}

/*
 * vowels
 */
 
.alphabet short_vowel .base aou_vowel e_vowel i_vowel { }

.alphabet diphthong_vowel {
  ai  = "diphthong (ai)"
  oi  = "diphthong (oi)"
  ui  = "diphthong (ui)"
  au  = "diphthong (au)"
  eu  = "diphthong (eu)"
  iu  = "diphthong (iu)"
}

.alphabet long_vowel {
  aa  = "long tehta (a)"
  ee  = "long tehta (e)"
  ii  = "long tehta (i)"
  oo  = "long tehta (o)"
  uu  = "long tehta (u)"
}

.alphabet non_diphthong_vowel .base ie_vowel ea_vowel { }

.alphabet pair_vowel .base long_vowel diphthong_vowel non_diphthong_vowel { }

.alphabet vowel .base short_vowel pair_vowel { }

/*
 * consonants
 */
 
.alphabet single_consonant {
  s   = "silme"
  n   = "numen"
  m   = "malta"
}

.alphabet double_consonant {
  ss  = "esse"
  nn  = "long numen"
  mm  = "long malta"
  ll  = "long lambe"
  mn  = "malta + numen"
  rn  = "romen + numen"
}

.alphabet denasaled_consonant {
  t   = "tinco"
  p   = "parma"
  c   = "calma"
  qu  = "quesse"
  w   = "vilya"
}

.alphabet nasaled_consonant {
  nt  = "anto"
  mp  = "ampa"
  nc  = "anca"
  nqu = "unque"
  n'  = "ngoldo"
  n'w = "ngwalme"
  nd  = "ando"
  mb  = "umbar"
  ng  = "anga"
  ngw = "ungwe"
}

.alphabet deaspirate_consonant {
  l   = "lambe"
  r   = "romen"
}

.alphabet aspirate_consonant {
  hl  = "hwesta sindarinwa + lambe"
  hr  = "hwesta sindarinwa + romen"
}

.alphabet soft_consonant {
  ty  = "soft tinco"
  ny  = "soft numen"
  ly  = "soft lambe"
  ry  = "soft romen"
  hy  = "soft hyarmen"
}

.alphabet other_consonant {
  th  = "thule"
  f   = "formen"
  x   = "harma"
  hw  = "hwesta"
  rd  = "arda"
  ld  = "alda"
  v   = "vala"
  h   = "hyarmen"
}

.alphabet consonant .base single_consonant double_consonant denasaled_consonant nasaled_consonant deaspirate_consonant aspirate_consonant soft_consonant other_consonant { }

/*
 * phomenes
 */
 
.alphabet phoneme .base vowel consonant { }

/*
 * global wildcards
 */

.wildcard . phoneme
.wildcard * vowel
.wildcard # consonant

.wildcard @ short_vowel
.wildcard ^ long_vowel
.wildcard % pair_vowel

.wildcard VOID .empty
