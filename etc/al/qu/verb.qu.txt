/*
 * Quenya grammar reference.
 * Borezkiy Arseniy Petrovich.
 */
 
.module /* verb.qu */

.language quenya 1 100
.compiler 1 0

/* =====================
 * VERB CLASS DEFINITION
 * ===================== */
 
/*
 * attributes
 */

.attribute avb_conjugation 1 .verbose {
  VC.A        = "A-steam verb"
  VC.B        = "basic verb"
  VC.U        = "U-steam verb"
}

.attribute avb_time 2 {
  V.inf.      = "infinitive"
  V.aor.      = "aorist"
  V.imp.      = "imperative"
  V.pr.       = "present continuous"
  V.p.        = "past continuous"
  V.f.        = "future"
  V.pfct.     = "perfect"
  V.paf.      = "past future"
}

.attribute avb_subject 3 {
  V.1p.sg.s.     = "1-st singular subject"
  V.2ip.sg.s.    = "2-nd intimate singular subject"
  V.2fp.sg.s.    = "2-nd formal singular subject"
  V.3p.sg.s.     = "3-rd singular subject"
  V.1p.du.inc.s. = "1-st dual inclusive subject"
  V.1p.du.exc.s. = "1-st dual exclusive subject"
  V.1p.pl.inc.s. = "1-st plural inclusive subject"
  V.1p.pl.exc.s. = "1-st plural exclusive subject"
  V.3p.pl.s.     = "3-rd plural subject"
}

.attribute avb_object 4 {
  V.1p.sg.o.  = "1-st single object"
  V.2ip.sg.o. = "2-nd intimate singular object"
  V.2fp.sg.o. = "2-nd formal singular object"
  V.3p.sg.o.  = "3-rd single object"
  V.3p.pl.o.  = "3-rd plural object"
}

.attribute avb_ending 5 .verbose {
  V.end.      = "with subject or object"
  V.end.no.   = "without subject or object"
}

.attribute avb_vowel_type 6 .verbose {
  V.st.s.w.   = "steam short vowel"
  V.st.l.w.   = "steam long vowel"
}

.attribute avb_augment 7 .verbose {
  V.aug.      = "augment"
  V.aug.no.   = "no augment"
}

.attribute avb_augment_type 8 .verbose {
  V.aug.sep.  = "separated augment type"
  V.aug.fus.  = "fused augment type"
}

.attribute avb_prefix 9 .verbose {
  V.pfx.      = "with prefix"
  V.pfx.no.   = "without prefix"
}

/*
 * class implementation
 */
 
.class verb {
  pars_orationis
  avb_time
  avb_subject
  avb_object
  avb_ending
  avb_vowel_type
  avb_augment
  avb_augment_type
  avb_conjugation
  avb_prefix
}
 
/*
 * reflections
 */
 
.mutation fvb_denfiction {
  /* simple */
  nt  = t
  mp  = p
  nc  = c
  /* nasal */
  mn  = m
  nn  = n
  rn  = n
  ll  = l
}

.reflection fvb_shortify_vowel {
  aa  = a
  ee  = e
  ii  = i
  oo  = o
  uu  = u
}

.mutation fvb_append_vovel_a { VOID += a }
.mutation fvb_append_vovel_u { VOID += u }

/*
 * wildcards
 */

.wildcard (#n>#) fvb_denfiction
.wildcard (^>*) fvb_shortify_vowel
.wildcard (+a) fvb_append_vovel_a
.wildcard (+u) fvb_append_vovel_u

/*
 * rules
 */

.vocabulary voc_verbs ;
.vocabular .inward mvb_stem voc_verbs

/* verb engings */

.match .backward mvb_long_subject {
  +nye  | V.1p.sg.s.
  +tye  | V.2ip.sg.s.
  +lye  | V.2fp.sg.s.
  +se   | V.3p.sg.s.
  +ngwe | V.1p.du.inc.s.
  +nque | V.1p.du.inc.s.
  +mme  | V.1p.du.exc.s.
  +lve  | V.1p.pl.inc.s.
  +lwe  | V.1p.pl.inc.s.
  +lme  | V.1p.pl.exc.s.
  +lte  | V.3p.pl.s.
  +nte  | V.3p.pl.s.
}

.match .backward mvb_short_subject {
  +n | V.1p.sg.s.
  +t | V.2ip.sg.s.
  +l | V.2fp.sg.s.
}

.match .backward mvb_object {
  +n | V.1p.sg.o.
  +t | V.2ip.sg.o.
  +l | V.2fp.sg.o.
  +s | V.3p.sg.o.
  +t | V.3p.pl.o.
}

.match .backward mvb_endings {
  mvb_long_subject mvb_object | V.end.
  mvb_short_subject           | V.end.
  =.                          | V.end.no.
}

/* verb time */

.match .backward mvb_time {
  /* A conjugation */
  -a          | VC.A V.inf.            V.aug.no.
  -a          | VC.A V.aor.            V.aug.no.
  -a          | VC.A V.imp.            V.aug.no.
  =(+a)+ea    | VC.A V.pr.   V.st.l.w. V.aug.no.
  =a+ne       | VC.A V.p.              V.aug.no.
  =(+a)+uva   | VC.A V.f.              V.aug.no.
  =(+a)+ie    | VC.A V.pfct. V.st.l.w. V.aug.
  =(+a)+umne  | VC.A V.paf.            V.aug.no.
  /* Basic conjugation */
  +e          | VC.B V.inf.  V.end.no. V.aug.no.
  +ita        | VC.B V.inf.  V.end.    V.aug.no.
  +e          | VC.B V.aor.  V.end.no. V.aug.no.
  +i          | VC.B V.aor.  V.end.    V.aug.no.
  +e          | VC.B V.imp.            V.aug.no.
  +a          | VC.B V.imp.            V.aug.no.
  +a          | VC.B V.pr.   V.st.l.w. V.aug.no.
  -(#n>#)+e   | VC.B V.p.              V.aug.no.
  +uva        | VC.B V.f.              V.aug.no.
  +ie         | VC.B V.pfct. V.st.l.w. V.aug.
  +umne       | VC.B V.paf.            V.aug.no.
  /* U conjugation */
  =(+u)+o     | VC.U V.inf.            V.aug.no.
  =(+u)+we    | VC.U V.aor.  V.end.no. V.aug.no.
  -u+e        | VC.U V.aor.  V.end.no. V.aug.no.
  =(+u)+wi    | VC.U V.aor.  V.end.    V.aug.no.
  -u+i        | VC.U V.aor.  V.end.    V.aug.no.
  =(+u)+wa    | VC.U V.pr.   V.st.l.w. V.aug.no.
  -u+a        | VC.U V.pr.   V.st.l.w. V.aug.no.
  -u+ne       | VC.U V.p.              V.aug.no.
  -u+va       | VC.U V.f.              V.aug.no.
  -u+uva      | VC.U V.f.              V.aug.no.
  =(+u)+wie   | VC.U V.pfct. V.st.l.w. V.aug.
  -u+ie       | VC.U V.pfct. V.st.l.w. V.aug.
}

/* verb stem vowel */

.match .forward mvb_stem_vowel {
  =#-@     | V.aug.    V.st.s.w.
  =#-(^>*) | V.aug.    V.st.l.w.
  -@       | V.aug.    V.st.s.w.
  =#=@     | V.aug.no. V.st.s.w.
  =#=(^>*) | V.aug.no. V.st.l.w.
  =@       | V.aug.no. V.st.s.w.
  =(^>*)   | V.aug.no. V.st.l.w.
}

/* verb augment */

.match .forward mvb_augment {
  +@     | V.aug.
  -(^>*) | V.aug.
  =.     | V.aug.no.
}

/* verb */

.match .inward-void m_verb {
  mvb_augment mvb_stem_vowel mvb_stem mvb_time mvb_endings | vb. verb
}
