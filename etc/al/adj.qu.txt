.module /* adj.qu */

.language quenya 1 1

/* ==========================
 * ADJECTIVE CLASS DEFINITION
 * ========================== */
 
/*
 * attributes
 */
 
.attribute aa_number {
  A.sg.  = "singular number"
  A.pl.  = "plural number"
  A.du.  = "dual number"
}

.attribute aa_declension {
  AD.A  = "A-vovel declension"
  AD.E  = "E-vovel declension"
  AD.EA = "EA-vovel declension"
}

/*
 * class implementation
 */
 
.class adjective {
  aa_number
  aa_declension
}

/*
 * reflections
 */
 
.mutation fa_normalize_1 { e = a }
.mutation fa_normalize_2 { i = e }
.mutation fa_normalize_3 { ie = ea }

/*
 * wildcards
 */
 
.wildcard (e>a)   fa_normalize_1
.wildcard (i>e)   fa_normalize_2
.wildcard (ie>ea) fa_normalize_3

/*
 * rules
 */
 
.match .backward ma_number {
  =.          | A.sg.
  -(e>a)=e    | A.pl. AD.A
  -(i>e)=i    | A.pl. AD.E
  -(ie>ea)=ie | A.pl. AD.EA
}

.match .forward m_adjective {
  stem ma_number
}